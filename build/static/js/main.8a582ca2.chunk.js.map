{"version":3,"sources":["images/logo.png","images/wallpaper1.jpg","images/wallpaper2.jpg","images/wallpaper3.png","images/wallpaper4.webp","images/load.svg","images/warn.svg","contextapi.ts","StateContext.tsx","components/HeaderNDrawer.tsx","Head.tsx","components/Body.tsx","components/Footer.tsx","generated/graphql.tsx","components/MissionList/List.tsx","components/Loading.tsx","components/Error.tsx","components/MissionList/index.tsx","components/MissionAbout/About.tsx","components/MissionAbout/index.tsx","components/RocketList/List.tsx","components/RocketList/index.tsx","components/RocketAbout/About.tsx","components/RocketAbout/index.tsx","components/Details/Render.tsx","components/Details/index.tsx","App.tsx","config/index.ts","index.tsx"],"names":["initialState","id","draweropen","SET_ID","SET_DRAWER","settingID","input","type","settingDRAWER","reducer","state","action","StateContext","createContext","StateProvider","children","useReducer","dispatch","Provider","value","useStateValue","useContext","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","background","content","flexGrow","contentShift","Header","classes","useTheme","useState","open","setOpen","useMediaQuery","undefined","name","className","CssBaseline","AppBar","classnames","clsx","elevation","Toolbar","IconButton","color","aria-label","onClick","edge","src","logo","alt","Typography","component","to","Button","variant","disableRipple","Drawer","anchor","paper","style","direction","Divider","List","ListItemIcon","ListItemText","primary","Head","title","Helmet","Body","str","n","screen900","fontSize","length","substr","Footer","CapsuleRange","LaunchRange","Order","CacheControlScope","href","target","url","rel","DetailsDocument","gql","MissionAboutDocument","MissionListDocument","RocketAboutDocument","RocketListDocument","data","history","useHistory","launches","map","x","index","toString","push","mission_name","Loading","Card","square","load","Error","warn","MissionList","baseOptions","Apollo","loading","error","About","launch","mission_id","launch_success","launch_year","MissionAbout","variables","rocket","rocket_name","RocketList","rocket_type","first_stage","cores","land_success","reused","RocketAbout","Render","links","video_link","wikipedia","Details","App","overflowY","path","exact","HeaderNDrawer","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a582ca2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ca8e7ca7.png\";","export default __webpack_public_path__ + \"static/media/wallpaper1.9b75fa30.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper2.ce94a25b.jpg\";","export default __webpack_public_path__ + \"static/media/wallpaper3.89a6c0f1.png\";","export default __webpack_public_path__ + \"static/media/wallpaper4.a38cb374.webp\";","export default __webpack_public_path__ + \"static/media/load.c8d8dbff.svg\";","export default __webpack_public_path__ + \"static/media/warn.929f4c7d.svg\";","//initialState\nexport const initialState: {\n    id: string;\n    draweropen: boolean;\n} = {\n    id: \"\",\n    draweropen: false\n}\n\n\n//actionTypes\nconst SET_ID : string = \"SET_ID\";\nconst SET_DRAWER : string = \"SET_DRAWER\";\n\n\n//actions\nexport const settingID = (input: string) => {\n    return {\n        type: SET_ID,\n        id: input\n    }\n}\nexport const settingDRAWER = () => {\n    return {\n        type: SET_DRAWER\n    }\n}\n\n\n//reducer\nexport function reducer(state = initialState, action: any) {\n    switch(action.type) {\n        case SET_ID:\n            return {\n                ...state,\n                id: action.id\n            }\n\n        case SET_DRAWER:\n            return {\n                ...state,\n                draweropen: !state.draweropen\n            }\n\n        default:\n            return state;\n    }\n}","import React, { createContext, useContext, useReducer } from 'react';\nimport { initialState, reducer } from './contextapi';\n\nconst StateContext = createContext<any[]>([]);\n\ninterface StateProviderProps {\n    children: JSX.Element | JSX.Element[];\n}\n\nexport function StateProvider({ children }: StateProviderProps) {\n    const [ state, dispatch ] = useReducer(reducer, initialState);\n\n    return (\n        <StateContext.Provider\n            value={[ state, dispatch ]}            //\"useReducer\" ki values as a object send kardi\n        >\n\n            { children }\n        </StateContext.Provider>\n    )\n}\n\nexport const useStateValue = () => useContext<any[]>(StateContext);","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BookIcon from '@material-ui/icons/Book';\nimport DetailsIcon from '@material-ui/icons/Details';\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\nimport classnames from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { logo } from '../images';\n//for not show 'header & drawer' after 240px\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n//CONTEXT API\nimport { settingDRAWER } from '../contextapi';\nimport { useStateValue } from '../StateContext';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        background: \"linear-gradient(59deg, #16222A, #3A6073)\",\n    },\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    }\n}))\n\ninterface HeaderNDrawerProps {\n   children: JSX.Element;\n}\n\nfunction Header({ children }: HeaderNDrawerProps) {\n    const classes = useStyles();\n    const theme = useTheme();\n  \n    const [ open, setOpen ] = useState(false);\n    \n    const handleDrawerOpen = () => {\n       setOpen(true);\n       dispatch(settingDRAWER());\n    }\n  \n    const handleDrawerClose = () => {\n       setOpen(false);\n       dispatch(settingDRAWER());\n    }\n\n    const [ state, dispatch ] = useStateValue();            //jo k value \"useReducer\" ki deraha\n    const screen240 = useMediaQuery('(max-width:240px)');   //for not show 'header & drawer' after 240px\n\n    if(screen240 && (children?.type?.name !== undefined)) {\n        //for not show 'header & drawer' after 240px except show always for front app page\n        return (\n            <>\n                { children }\n            </>\n        )\n    }\n    else {\n        return (\n            <div className={classes.root}>\n                <CssBaseline/>\n         \n                <AppBar\n                    className={\n                        classnames(\n                           \"headerNdrawer\",\n                           clsx(classes.appBar, { [classes.appBarShift]: open })\n                        )\n                    }\n                    elevation={0}\n                >\n                   <Toolbar className=\"toolbar\">\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={handleDrawerOpen}\n                            edge=\"start\"\n                            className={clsx(classes.menuButton, open && classes.hide)}\n                        >\n                           <MenuIcon/>\n                        </IconButton>\n            \n                        <div className=\"toolbar_left\">\n                            <img src={logo} alt=\"\"/>\n                            <Typography component=\"p\"> SPACEX  </Typography>\n                        </div>\n    \n                        {//undefined pe app yahan as a children hoga qk div bana k pass kara hai\n                            children?.type?.name === undefined && (\n                               <div className=\"toolbar_right\">\n                                    <Link to=\"/missions\">\n                                        <Button variant=\"contained\" disableRipple id=\"missions\"> MISSIONS </Button>\n                                    </Link>\n                                    <Link to=\"/rockets\">\n                                        <Button variant=\"contained\" disableRipple id=\"rockets\"> ROCKETS </Button>\n                                    </Link>\n                                    <Link to=\"/details\">\n                                        <Button variant=\"contained\" disableRipple id=\"details\"> DETAILS </Button>\n                                    </Link>\n                               </div>  \n                            )\n                        }\n                   </Toolbar>\n                </AppBar>\n\n                <Drawer\n                    className={classnames(classes.drawer, \"drawer\")}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={open}\n                    classes={{\n                       paper: classes.drawerPaper\n                    }}\n                >\n                    <div>\n                        <IconButton id=\"xx\" onClick={handleDrawerClose} style={{ color: \"white\" }}>\n                           {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                        </IconButton>\n                    </div>\n                    <Divider/>\n        \n                    <List className=\"drawer_list\">\n                        {//undefined pe app yahan as a children hoga qk div bana k pass kara hai\n                           children?.type?.name !== undefined && (\n                               <Link to=\"/\">\n                                   <ListItemIcon> <HomeIcon className=\"drawer_list_icon\"/> </ListItemIcon>\n                                   <ListItemText primary={<p className=\"drawer_list_text\"> HOME </p>}/>\n                               </Link>\n                           )\n                        }\n                        {\n                           children?.type?.name !== \"MissionList\" && (\n                               <Link to=\"/missions\">\n                                   <ListItemIcon> <BookIcon className=\"drawer_list_icon\"/> </ListItemIcon>\n                                   <ListItemText primary={<p className=\"drawer_list_text\"> MISSION </p>}/>\n                               </Link>\n                           )\n                        }                    \n                        {\n                            children?.type?.name !== \"RocketList\" && (\n                                <Link to=\"/rockets\">\n                                    <ListItemIcon> <DetailsIcon className=\"drawer_list_icon\"/> </ListItemIcon>\n                                    <ListItemText primary={<p className=\"drawer_list_text\"> ROCKETS </p>}/>\n                                </Link>\n                            )\n                        }\n                        {\n                            children?.type?.name !== \"Details\" && (\n                                <Link to=\"/details\">\n                                    <ListItemIcon> <ImportContactsIcon className=\"drawer_list_icon\"/> </ListItemIcon>\n                                    <ListItemText primary={<p className=\"drawer_list_text\"> DETAILS </p>}/>\n                                </Link>\n                            )\n                        }\n                    </List>\n                </Drawer>\n        \n                <main\n                    className={clsx(classes.content, {\n                       [classes.contentShift]: open,\n                    })}\n                >\n                <div/>\n    \n                   { children }\n        \n                </main>\n            </div>\n        )     \n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\ninterface HeadProps {\n    title: string;\n}\n\nfunction Head({ title }: HeadProps) {\n    const AppName = \"Space X\";\n\n    return (\n        <Helmet\n            title={\n                (title === \"Loading...\" || title === \"Error :'(\" )\n                ? title : `${title} | ${AppName}`\n            }\n        />\n    )\n}\n\nexport default Head;","import React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Head from '../Head';\n//CONTEXT API\nimport { useStateValue } from '../StateContext';\n\nconst truncate = (str: string, n: number) => str?.length > n ? `${str.substr(0, n-1)}.` : str;\n\nfunction Body() {\n    const [ { draweropen }, dispatch ] = useStateValue();\n    const screen900 = useMediaQuery('(max-width:900px)');\n\n    return (\n        <div className=\"body\">\n            <Head title=\"Home\"/>\n\n            <ul style={\n                draweropen ? { marginLeft: \"2.9rem\", fontSize: \"4.25rem\" } : {}\n            }>\n                <li>S</li> <li>P</li> <li>A</li> <li>C</li> <li>E</li> <li style={{ marginLeft: \"0.5rem\" }}>X</li>\n            </ul>\n\n            <p style={\n                draweropen ? { width: \"28.5rem\" } : {}\n            }>\n                {\n                    !screen900 ?    //for truncate text after 900px\n                    truncate(`\n                        ' SpaceX ' is an American aerospace manufacturer and space transportation\n                        services company headquartered in Hawthorne, California. It was founded\n                        in 2002 by Elon Musk with a goal of reducing space transportation\n                        costs to enable the colonization of Mars, Company was founded in 2002\n                        to revolutionize space.\n                    `, 252)\n                    :\n                    `' SpaceX ' is an American aerospace manufacturer and space transportation\n                    services company headquartered in Hawthorne, California. It was founded\n                    in 2002 by Elon Musk with the goal of reducing space transportation\n                    costs to enable the colonization of Mars, Company was founded in 2002\n                    to revolutionize space.`\n                }\n            </p>\n        </div>\n    )\n}\n\nexport default Body;","import React from 'react';\nimport { SocialIcon } from 'react-social-icons';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer page-footer font-small stylish-color-dark pt-4\">\n            <ul className=\"list-unstyled list-inline text-center py-2\">\n                <li className=\"list-inline-item\">\n                   <h5 className=\"mb-1\"> Visit us for free </h5>\n                </li>\n                <li className=\"list-inline-item\">\n                   <a href=\"https://www.spacex.com\" className=\"btn btn-light btn-rounded\"> Join Now! </a>\n                </li>\n            </ul>\n          \n            <hr/>\n  \n            <div className=\"icons\">\n                <SocialIcon target=\"_blank\" url=\"https://www.facebook.com/spacenewsx\" className=\"icon\"/>\n                <SocialIcon target=\"_blank\" url=\"https://www.linkedin.com/company/spacex\" className=\"icon\"/>\n                <SocialIcon target=\"_blank\" url=\"https://www.youtube.com/user/spacexchannel\" className=\"icon\"/>\n                <SocialIcon target=\"_blank\" url=\"https://twitter.com/SpaceX\" className=\"icon\"/>\n            </div>\n    \n            <hr/>\n  \n            <div className=\"footer-copyright text-center py-3\"> © 2020 Copyright:\n                <a href=\"https://www.spacex.com/\" target=\"_blank\" rel=\"noreferrer\"> spacex.com </a>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  capsule?: Maybe<Capsule>;\n  capsules?: Maybe<Array<Maybe<Capsule>>>;\n  core?: Maybe<Core>;\n  cores?: Maybe<Array<Maybe<Core>>>;\n  dragon?: Maybe<Dragon>;\n  dragons?: Maybe<Array<Maybe<Dragon>>>;\n  history?: Maybe<Array<Maybe<History>>>;\n  info?: Maybe<Info>;\n  landingpad?: Maybe<Landingpad>;\n  landingpads?: Maybe<Array<Maybe<Landingpad>>>;\n  launch?: Maybe<Launch>;\n  launches?: Maybe<Array<Maybe<Launch>>>;\n  launchpad?: Maybe<Launchpad>;\n  launchpads?: Maybe<Array<Maybe<Launchpad>>>;\n  mission?: Maybe<Mission>;\n  missions?: Maybe<Array<Maybe<Mission>>>;\n  payload?: Maybe<Payload>;\n  payloads?: Maybe<Array<Maybe<Payload>>>;\n  roadster?: Maybe<Roadster>;\n  rocket?: Maybe<Rocket>;\n  rockets?: Maybe<Array<Maybe<Rocket>>>;\n  ship?: Maybe<Ship>;\n  ships?: Maybe<Array<Maybe<Ship>>>;\n};\n\n\nexport type QueryCapsuleArgs = {\n  capsule_serial: Scalars['String'];\n};\n\n\nexport type QueryCapsulesArgs = {\n  range?: Maybe<CapsuleRange>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Order>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCoreArgs = {\n  core_serial: Scalars['String'];\n};\n\n\nexport type QueryCoresArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Order>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryDragonArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryDragonsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryHistoryArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Order>;\n  sort?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLandingpadArgs = {\n  id?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLandingpadsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryLaunchArgs = {\n  id?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLaunchesArgs = {\n  range?: Maybe<LaunchRange>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Order>;\n  sort?: Maybe<Scalars['String']>;\n  ids?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\n\nexport type QueryLaunchpadArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryLaunchpadsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryMissionArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryMissionsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryPayloadArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryPayloadsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Order>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryRocketArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryRocketsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryShipArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryShipsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Order>;\n  sort?: Maybe<Scalars['String']>;\n};\n\nexport enum CapsuleRange {\n  Past = 'past',\n  Upcoming = 'upcoming'\n}\n\nexport enum LaunchRange {\n  Latest = 'latest',\n  Next = 'next',\n  Past = 'past',\n  Upcoming = 'upcoming'\n}\n\nexport enum Order {\n  Asc = 'asc',\n  Desc = 'desc'\n}\n\nexport type BasicMission = {\n  __typename?: 'BasicMission';\n  name?: Maybe<Scalars['String']>;\n  flight?: Maybe<Scalars['Int']>;\n};\n\nexport type Capsule = {\n  __typename?: 'Capsule';\n  capsule_serial?: Maybe<Scalars['String']>;\n  capsule_id?: Maybe<Scalars['String']>;\n  status?: Maybe<Scalars['String']>;\n  original_launch?: Maybe<Scalars['String']>;\n  original_launch_unix?: Maybe<Scalars['Float']>;\n  missions?: Maybe<Array<Maybe<BasicMission>>>;\n  landings?: Maybe<Scalars['Int']>;\n  type?: Maybe<Scalars['String']>;\n  details?: Maybe<Scalars['String']>;\n  reuse_count?: Maybe<Scalars['Int']>;\n};\n\nexport type Core = {\n  __typename?: 'Core';\n  core_serial?: Maybe<Scalars['String']>;\n  block?: Maybe<Scalars['Int']>;\n  status?: Maybe<Scalars['String']>;\n  original_launch?: Maybe<Scalars['String']>;\n  original_launch_unix?: Maybe<Scalars['Float']>;\n  missions?: Maybe<Array<Maybe<BasicMission>>>;\n  reuse_count?: Maybe<Scalars['Int']>;\n  rtls_attempts?: Maybe<Scalars['Int']>;\n  rtls_landings?: Maybe<Scalars['Int']>;\n  asds_attempts?: Maybe<Scalars['Int']>;\n  asds_landings?: Maybe<Scalars['Int']>;\n  water_landing?: Maybe<Scalars['Boolean']>;\n  details?: Maybe<Scalars['String']>;\n};\n\nexport type Dimension = {\n  __typename?: 'Dimension';\n  meters?: Maybe<Scalars['Float']>;\n  feet?: Maybe<Scalars['Float']>;\n};\n\nexport type Dragon = {\n  __typename?: 'Dragon';\n  id?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  active?: Maybe<Scalars['Boolean']>;\n  crew_capacity?: Maybe<Scalars['Int']>;\n  sidewall_angle_deg?: Maybe<Scalars['Int']>;\n  orbit_duration_yr?: Maybe<Scalars['Int']>;\n  dry_mass_kg?: Maybe<Scalars['Int']>;\n  dry_mass_lb?: Maybe<Scalars['Int']>;\n  first_flight?: Maybe<Scalars['String']>;\n  heat_shield?: Maybe<HeatShield>;\n  thrusters?: Maybe<Array<Maybe<Thruster>>>;\n  launch_payload_mass?: Maybe<Mass>;\n  launch_payload_vol?: Maybe<PayloadVolume>;\n  return_payload_mass?: Maybe<Mass>;\n  return_payload_vol?: Maybe<PayloadVolume>;\n  pressurized_capsule?: Maybe<PressurizedCapsule>;\n  trunk?: Maybe<Trunk>;\n  height_w_trunk?: Maybe<Dimension>;\n  diameter?: Maybe<Dimension>;\n  wikipedia?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n};\n\nexport type Engines = {\n  __typename?: 'Engines';\n  number?: Maybe<Scalars['Int']>;\n  type?: Maybe<Scalars['String']>;\n  version?: Maybe<Scalars['String']>;\n  layout?: Maybe<Scalars['String']>;\n  engine_loss_max?: Maybe<Scalars['Int']>;\n  propellant_1?: Maybe<Scalars['String']>;\n  propellant_2?: Maybe<Scalars['String']>;\n  thrust_sea_level?: Maybe<Thrust>;\n  thrust_vacuum?: Maybe<Thrust>;\n  thrust_to_weight?: Maybe<Scalars['Float']>;\n};\n\nexport type Fairing = {\n  __typename?: 'Fairing';\n  height?: Maybe<Dimension>;\n  diameter?: Maybe<Dimension>;\n};\n\nexport type Headquarters = {\n  __typename?: 'Headquarters';\n  address?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  state?: Maybe<Scalars['String']>;\n};\n\nexport type HeatShield = {\n  __typename?: 'HeatShield';\n  material?: Maybe<Scalars['String']>;\n  size_meters?: Maybe<Scalars['Float']>;\n  temp_degrees?: Maybe<Scalars['Int']>;\n  dev_partner?: Maybe<Scalars['String']>;\n};\n\nexport type History = {\n  __typename?: 'History';\n  id?: Maybe<Scalars['Int']>;\n  title?: Maybe<Scalars['String']>;\n  event_date_utc?: Maybe<Scalars['String']>;\n  event_date_unix?: Maybe<Scalars['Float']>;\n  flight_number?: Maybe<Scalars['Int']>;\n  details?: Maybe<Scalars['String']>;\n  links?: Maybe<HistoryLinks>;\n};\n\nexport type HistoryLinks = {\n  __typename?: 'HistoryLinks';\n  article?: Maybe<Scalars['String']>;\n  reddit?: Maybe<Scalars['String']>;\n  wikipedia?: Maybe<Scalars['String']>;\n};\n\nexport type Info = {\n  __typename?: 'Info';\n  name?: Maybe<Scalars['String']>;\n  founder?: Maybe<Scalars['String']>;\n  founded?: Maybe<Scalars['Int']>;\n  employees?: Maybe<Scalars['Int']>;\n  vehicles?: Maybe<Scalars['Int']>;\n  launch_sites?: Maybe<Scalars['Int']>;\n  test_sites?: Maybe<Scalars['Int']>;\n  ceo?: Maybe<Scalars['String']>;\n  cto?: Maybe<Scalars['String']>;\n  coo?: Maybe<Scalars['String']>;\n  cto_propulsion?: Maybe<Scalars['String']>;\n  valuation?: Maybe<Scalars['Float']>;\n  headquarters?: Maybe<Headquarters>;\n  summary?: Maybe<Scalars['String']>;\n};\n\nexport type LandingLegs = {\n  __typename?: 'LandingLegs';\n  number?: Maybe<Scalars['Int']>;\n  material?: Maybe<Scalars['String']>;\n};\n\nexport type Landingpad = {\n  __typename?: 'Landingpad';\n  id?: Maybe<Scalars['String']>;\n  full_name?: Maybe<Scalars['String']>;\n  status?: Maybe<Scalars['String']>;\n  location?: Maybe<Location>;\n  landing_type?: Maybe<Scalars['String']>;\n  attempted_landings?: Maybe<Scalars['Int']>;\n  successful_landings?: Maybe<Scalars['Int']>;\n  wikipedia?: Maybe<Scalars['String']>;\n  details?: Maybe<Scalars['String']>;\n};\n\nexport type Launch = {\n  __typename?: 'Launch';\n  flight_number?: Maybe<Scalars['Int']>;\n  mission_id?: Maybe<Array<Maybe<Scalars['String']>>>;\n  mission_name?: Maybe<Scalars['String']>;\n  launch_year?: Maybe<Scalars['Int']>;\n  launch_date_unix?: Maybe<Scalars['Float']>;\n  launch_date_utc?: Maybe<Scalars['String']>;\n  launch_date_local?: Maybe<Scalars['String']>;\n  is_tentative?: Maybe<Scalars['Boolean']>;\n  tentative_max_precision?: Maybe<Scalars['String']>;\n  tbd?: Maybe<Scalars['Boolean']>;\n  launch_window?: Maybe<Scalars['Int']>;\n  rocket?: Maybe<LaunchRocket>;\n  ships?: Maybe<Array<Maybe<Scalars['String']>>>;\n  telemetry?: Maybe<LaunchTelemetry>;\n  launch_site?: Maybe<LaunchSite>;\n  launch_success?: Maybe<Scalars['Boolean']>;\n  links?: Maybe<LaunchLinks>;\n  details?: Maybe<Scalars['String']>;\n  upcoming?: Maybe<Scalars['Boolean']>;\n  static_fire_date_utc?: Maybe<Scalars['String']>;\n  static_fire_date_unix?: Maybe<Scalars['Float']>;\n  timeline?: Maybe<LaunchTimeline>;\n};\n\nexport type LaunchLinks = {\n  __typename?: 'LaunchLinks';\n  mission_patch?: Maybe<Scalars['String']>;\n  mission_patch_small?: Maybe<Scalars['String']>;\n  reddit_campaign?: Maybe<Scalars['String']>;\n  reddit_launch?: Maybe<Scalars['String']>;\n  reddit_recovery?: Maybe<Scalars['String']>;\n  reddit_media?: Maybe<Scalars['String']>;\n  presskit?: Maybe<Scalars['String']>;\n  article_link?: Maybe<Scalars['String']>;\n  wikipedia?: Maybe<Scalars['String']>;\n  video_link?: Maybe<Scalars['String']>;\n  youtube_id?: Maybe<Scalars['String']>;\n  flickr_images?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\nexport type Launchpad = {\n  __typename?: 'Launchpad';\n  id?: Maybe<Scalars['Int']>;\n  status?: Maybe<Scalars['String']>;\n  location?: Maybe<Location>;\n  vehicles_launched?: Maybe<Array<Maybe<Scalars['String']>>>;\n  attempted_launches?: Maybe<Scalars['Int']>;\n  successful_launches?: Maybe<Scalars['Int']>;\n  wikipedia?: Maybe<Scalars['String']>;\n  details?: Maybe<Scalars['String']>;\n  site_id?: Maybe<Scalars['String']>;\n  site_name_long?: Maybe<Scalars['String']>;\n};\n\nexport type LaunchRocket = {\n  __typename?: 'LaunchRocket';\n  rocket_id?: Maybe<Scalars['String']>;\n  rocket_name?: Maybe<Scalars['String']>;\n  rocket_type?: Maybe<Scalars['String']>;\n  first_stage?: Maybe<LaunchRocketFirstStage>;\n  second_stage?: Maybe<LaunchRocketSecondStage>;\n  fairings?: Maybe<LaunchRocketFairings>;\n};\n\nexport type LaunchRocketFairings = {\n  __typename?: 'LaunchRocketFairings';\n  reused?: Maybe<Scalars['Boolean']>;\n  recovery_attempt?: Maybe<Scalars['Boolean']>;\n  recovered?: Maybe<Scalars['Boolean']>;\n  ship?: Maybe<Scalars['String']>;\n};\n\nexport type LaunchRocketFirstStage = {\n  __typename?: 'LaunchRocketFirstStage';\n  cores?: Maybe<Array<Maybe<LaunchRocketFirstStageCore>>>;\n};\n\nexport type LaunchRocketFirstStageCore = {\n  __typename?: 'LaunchRocketFirstStageCore';\n  core_serial?: Maybe<Scalars['String']>;\n  flight?: Maybe<Scalars['Int']>;\n  block?: Maybe<Scalars['Int']>;\n  gridfins?: Maybe<Scalars['Boolean']>;\n  legs?: Maybe<Scalars['Boolean']>;\n  reused?: Maybe<Scalars['Boolean']>;\n  land_success?: Maybe<Scalars['Boolean']>;\n  landing_intent?: Maybe<Scalars['Boolean']>;\n  landing_type?: Maybe<Scalars['String']>;\n  landing_vehicle?: Maybe<Scalars['String']>;\n};\n\nexport type LaunchRocketSecondStage = {\n  __typename?: 'LaunchRocketSecondStage';\n  block?: Maybe<Scalars['Int']>;\n  payloads?: Maybe<Array<Maybe<Payload>>>;\n};\n\nexport type LaunchSite = {\n  __typename?: 'LaunchSite';\n  site_id?: Maybe<Scalars['String']>;\n  site_name?: Maybe<Scalars['String']>;\n  site_name_long?: Maybe<Scalars['String']>;\n};\n\nexport type LaunchTelemetry = {\n  __typename?: 'LaunchTelemetry';\n  flight_club?: Maybe<Scalars['String']>;\n};\n\nexport type LaunchTimeline = {\n  __typename?: 'LaunchTimeline';\n  webcast_liftoff?: Maybe<Scalars['Int']>;\n  go_for_prop_loading?: Maybe<Scalars['Int']>;\n  rp1_loading?: Maybe<Scalars['Int']>;\n  stage1_rp1_loading?: Maybe<Scalars['Int']>;\n  stage1_lox_loading?: Maybe<Scalars['Int']>;\n  stage2_rp1_loading?: Maybe<Scalars['Int']>;\n  stage2_lox_loading?: Maybe<Scalars['Int']>;\n  engine_chill?: Maybe<Scalars['Int']>;\n  prelaunch_checks?: Maybe<Scalars['Int']>;\n  propellant_pressurization?: Maybe<Scalars['Int']>;\n  go_for_launch?: Maybe<Scalars['Int']>;\n  ignition?: Maybe<Scalars['Int']>;\n  liftoff?: Maybe<Scalars['Int']>;\n  maxq?: Maybe<Scalars['Int']>;\n  beco?: Maybe<Scalars['Int']>;\n  side_core_sep?: Maybe<Scalars['Int']>;\n  side_core_boostback?: Maybe<Scalars['Int']>;\n  meco?: Maybe<Scalars['Int']>;\n  stage_sep?: Maybe<Scalars['Int']>;\n  center_stage_sep?: Maybe<Scalars['Int']>;\n  second_stage_ignition?: Maybe<Scalars['Int']>;\n  center_core_boostback?: Maybe<Scalars['Int']>;\n  fairing_deploy?: Maybe<Scalars['Int']>;\n  first_stage_entry_burn?: Maybe<Scalars['Int']>;\n  side_core_entry_burn?: Maybe<Scalars['Int']>;\n  center_core_entry_burn?: Maybe<Scalars['Int']>;\n  seco_1?: Maybe<Scalars['Int']>;\n  first_stage_landing_burn?: Maybe<Scalars['Int']>;\n  first_stage_landing?: Maybe<Scalars['Int']>;\n  side_core_landing?: Maybe<Scalars['Int']>;\n  center_core_landing?: Maybe<Scalars['Int']>;\n  second_stage_restart?: Maybe<Scalars['Int']>;\n  seco_2?: Maybe<Scalars['Int']>;\n  payload_deploy?: Maybe<Scalars['Int']>;\n  payload_deploy_1?: Maybe<Scalars['Int']>;\n  payload_deploy_2?: Maybe<Scalars['Int']>;\n  dragon_separation?: Maybe<Scalars['Int']>;\n  dragon_solar_deploy?: Maybe<Scalars['Int']>;\n  dragon_bay_door_deploy?: Maybe<Scalars['Int']>;\n};\n\nexport type Location = {\n  __typename?: 'Location';\n  name?: Maybe<Scalars['String']>;\n  region?: Maybe<Scalars['String']>;\n  latitude?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n};\n\nexport type Mass = {\n  __typename?: 'Mass';\n  kg?: Maybe<Scalars['Int']>;\n  lb?: Maybe<Scalars['Int']>;\n};\n\nexport type Mission = {\n  __typename?: 'Mission';\n  mission_name?: Maybe<Scalars['String']>;\n  mission_id?: Maybe<Scalars['String']>;\n  manufacturers?: Maybe<Array<Maybe<Scalars['String']>>>;\n  payload_ids?: Maybe<Array<Maybe<Scalars['String']>>>;\n  wikipedia?: Maybe<Scalars['String']>;\n  website?: Maybe<Scalars['String']>;\n  twitter?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n};\n\nexport type Payload = {\n  __typename?: 'Payload';\n  payload_id?: Maybe<Scalars['String']>;\n  norad_id?: Maybe<Array<Maybe<Scalars['String']>>>;\n  cap_serial?: Maybe<Scalars['String']>;\n  reused?: Maybe<Scalars['Boolean']>;\n  customers?: Maybe<Array<Maybe<Scalars['String']>>>;\n  nationality?: Maybe<Scalars['String']>;\n  manufacturer?: Maybe<Scalars['String']>;\n  payload_type?: Maybe<Scalars['String']>;\n  payload_mass_kg?: Maybe<Scalars['Float']>;\n  payload_mass_lbs?: Maybe<Scalars['Float']>;\n  orbit?: Maybe<Scalars['String']>;\n  orbit_params?: Maybe<PayloadOrbitParams>;\n  mass_returned_kg?: Maybe<Scalars['Float']>;\n  mass_returned_lbs?: Maybe<Scalars['Float']>;\n  flight_time_sec?: Maybe<Scalars['Int']>;\n  cargo_manifest?: Maybe<Scalars['String']>;\n};\n\nexport type PayloadOrbitParams = {\n  __typename?: 'PayloadOrbitParams';\n  reference_system?: Maybe<Scalars['String']>;\n  regime?: Maybe<Scalars['String']>;\n  longitude?: Maybe<Scalars['Float']>;\n  semi_major_axis_km?: Maybe<Scalars['Float']>;\n  eccentricity?: Maybe<Scalars['Float']>;\n  periapsis_km?: Maybe<Scalars['Float']>;\n  apoapsis_km?: Maybe<Scalars['Float']>;\n  inclination_deg?: Maybe<Scalars['Float']>;\n  period_min?: Maybe<Scalars['Float']>;\n  lifespan_years?: Maybe<Scalars['Float']>;\n  epoch?: Maybe<Scalars['String']>;\n  mean_motion?: Maybe<Scalars['Float']>;\n  raan?: Maybe<Scalars['Float']>;\n  arg_of_pericenter?: Maybe<Scalars['Float']>;\n  mean_anomaly?: Maybe<Scalars['Float']>;\n};\n\nexport type PayloadVolume = {\n  __typename?: 'PayloadVolume';\n  cubic_meters?: Maybe<Scalars['Int']>;\n  cubic_feet?: Maybe<Scalars['Int']>;\n};\n\nexport type Position = {\n  __typename?: 'Position';\n  latitude?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n};\n\nexport type PressurizedCapsule = {\n  __typename?: 'PressurizedCapsule';\n  payload_volume?: Maybe<PayloadVolume>;\n};\n\nexport type Roadster = {\n  __typename?: 'Roadster';\n  name: Scalars['String'];\n  launch_date_utc?: Maybe<Scalars['String']>;\n  launch_date_unix?: Maybe<Scalars['Float']>;\n  launch_mass_kg?: Maybe<Scalars['Int']>;\n  launch_mass_lbs?: Maybe<Scalars['Int']>;\n  norad_id?: Maybe<Scalars['Int']>;\n  epoch_jd?: Maybe<Scalars['Float']>;\n  orbit_type?: Maybe<Scalars['String']>;\n  apoapsis_au?: Maybe<Scalars['Float']>;\n  semi_major_axis_au?: Maybe<Scalars['Float']>;\n  eccentricity?: Maybe<Scalars['Float']>;\n  inclination?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n  periapsis_arg?: Maybe<Scalars['Float']>;\n  period_days?: Maybe<Scalars['Float']>;\n  speed_kph?: Maybe<Scalars['Float']>;\n  speed_mph?: Maybe<Scalars['Float']>;\n  earth_distance_km?: Maybe<Scalars['Float']>;\n  earth_distance_mi?: Maybe<Scalars['Float']>;\n  mars_distance_km?: Maybe<Scalars['Float']>;\n  mars_distance_mi?: Maybe<Scalars['Float']>;\n  wikipedia?: Maybe<Scalars['String']>;\n  details?: Maybe<Scalars['String']>;\n};\n\nexport type Rocket = {\n  __typename?: 'Rocket';\n  id?: Maybe<Scalars['Int']>;\n  active?: Maybe<Scalars['Boolean']>;\n  stages?: Maybe<Scalars['Int']>;\n  boosters?: Maybe<Scalars['Int']>;\n  cost_per_launch?: Maybe<Scalars['Int']>;\n  success_rate_pct?: Maybe<Scalars['Float']>;\n  first_flight?: Maybe<Scalars['String']>;\n  country?: Maybe<Scalars['String']>;\n  company?: Maybe<Scalars['String']>;\n  height?: Maybe<Dimension>;\n  diameter?: Maybe<Dimension>;\n  mass?: Maybe<Mass>;\n  payload_weights?: Maybe<Array<Maybe<RocketPayloadWeight>>>;\n  first_stage?: Maybe<RocketFirstStage>;\n  second_stage?: Maybe<RocketSecondStage>;\n  engines?: Maybe<Engines>;\n  landing_legs?: Maybe<LandingLegs>;\n  flickr_images?: Maybe<Array<Maybe<Scalars['String']>>>;\n  wikipedia?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  rocket_id?: Maybe<Scalars['String']>;\n  rocket_name?: Maybe<Scalars['String']>;\n  rocket_type?: Maybe<Scalars['String']>;\n};\n\nexport type RocketFirstStage = {\n  __typename?: 'RocketFirstStage';\n  reusable?: Maybe<Scalars['Boolean']>;\n  engines?: Maybe<Scalars['Int']>;\n  fuel_amount_tons?: Maybe<Scalars['Float']>;\n  burn_time_sec?: Maybe<Scalars['Int']>;\n  thrust_sea_level?: Maybe<Thrust>;\n  thrust_vacuum?: Maybe<Thrust>;\n};\n\nexport type RocketPayload = {\n  __typename?: 'RocketPayload';\n  option_1?: Maybe<Scalars['String']>;\n  option_2?: Maybe<Scalars['String']>;\n  composite_fairing?: Maybe<Fairing>;\n};\n\nexport type RocketPayloadWeight = {\n  __typename?: 'RocketPayloadWeight';\n  id?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  kg?: Maybe<Scalars['Float']>;\n  lb?: Maybe<Scalars['Float']>;\n};\n\nexport type RocketSecondStage = {\n  __typename?: 'RocketSecondStage';\n  engines?: Maybe<Scalars['Int']>;\n  fuel_amount_tons?: Maybe<Scalars['Float']>;\n  burn_time_sec?: Maybe<Scalars['Int']>;\n  thrust?: Maybe<Thrust>;\n  payloads?: Maybe<RocketPayload>;\n};\n\nexport type Ship = {\n  __typename?: 'Ship';\n  ship_id?: Maybe<Scalars['String']>;\n  ship_name?: Maybe<Scalars['String']>;\n  ship_model?: Maybe<Scalars['String']>;\n  ship_type?: Maybe<Scalars['String']>;\n  roles?: Maybe<Array<Maybe<Scalars['String']>>>;\n  active?: Maybe<Scalars['Boolean']>;\n  imo?: Maybe<Scalars['Int']>;\n  mmsi?: Maybe<Scalars['Int']>;\n  abs?: Maybe<Scalars['Int']>;\n  class?: Maybe<Scalars['Int']>;\n  weight_lbs?: Maybe<Scalars['Float']>;\n  weight_kg?: Maybe<Scalars['Float']>;\n  year_built?: Maybe<Scalars['Int']>;\n  home_port?: Maybe<Scalars['String']>;\n  status?: Maybe<Scalars['String']>;\n  speed_kn?: Maybe<Scalars['Float']>;\n  course_deg?: Maybe<Scalars['Float']>;\n  position?: Maybe<Position>;\n  successful_landings?: Maybe<Scalars['Int']>;\n  attempted_landings?: Maybe<Scalars['Int']>;\n  missions?: Maybe<Array<Maybe<BasicMission>>>;\n  url?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['String']>;\n};\n\nexport type Thrust = {\n  __typename?: 'Thrust';\n  kN?: Maybe<Scalars['Float']>;\n  lbf?: Maybe<Scalars['Float']>;\n};\n\nexport type Thruster = {\n  __typename?: 'Thruster';\n  type?: Maybe<Scalars['String']>;\n  amount?: Maybe<Scalars['Int']>;\n  pods?: Maybe<Scalars['Int']>;\n  fuel_1?: Maybe<Scalars['String']>;\n  fuel_2?: Maybe<Scalars['String']>;\n  thrust?: Maybe<Thrust>;\n};\n\nexport type Trunk = {\n  __typename?: 'Trunk';\n  trunk_volume?: Maybe<PayloadVolume>;\n  cargo?: Maybe<TrunkCargo>;\n};\n\nexport type TrunkCargo = {\n  __typename?: 'TrunkCargo';\n  solar_array?: Maybe<Scalars['Int']>;\n  unpressurized_cargo?: Maybe<Scalars['Boolean']>;\n};\n\nexport enum CacheControlScope {\n  Public = 'PUBLIC',\n  Private = 'PRIVATE'\n}\n\n\nexport type DetailsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type DetailsQuery = (\n  { __typename?: 'Query' }\n  & { launches?: Maybe<Array<Maybe<(\n    { __typename?: 'Launch' }\n    & Pick<Launch, 'mission_name' | 'launch_year'>\n    & { rocket?: Maybe<(\n      { __typename?: 'LaunchRocket' }\n      & Pick<LaunchRocket, 'rocket_name'>\n    )>, links?: Maybe<(\n      { __typename?: 'LaunchLinks' }\n      & Pick<LaunchLinks, 'video_link' | 'wikipedia'>\n    )> }\n  )>>> }\n);\n\nexport type MissionAboutQueryVariables = Exact<{\n  id: Scalars['String'];\n}>;\n\n\nexport type MissionAboutQuery = (\n  { __typename?: 'Query' }\n  & { launch?: Maybe<(\n    { __typename?: 'Launch' }\n    & Pick<Launch, 'mission_name' | 'mission_id' | 'launch_year' | 'launch_success'>\n  )> }\n);\n\nexport type MissionListQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type MissionListQuery = (\n  { __typename?: 'Query' }\n  & { launches?: Maybe<Array<Maybe<(\n    { __typename?: 'Launch' }\n    & Pick<Launch, 'mission_name'>\n  )>>> }\n);\n\nexport type RocketAboutQueryVariables = Exact<{\n  id: Scalars['String'];\n}>;\n\n\nexport type RocketAboutQuery = (\n  { __typename?: 'Query' }\n  & { launch?: Maybe<(\n    { __typename?: 'Launch' }\n    & { rocket?: Maybe<(\n      { __typename?: 'LaunchRocket' }\n      & Pick<LaunchRocket, 'rocket_name' | 'rocket_type'>\n      & { first_stage?: Maybe<(\n        { __typename?: 'LaunchRocketFirstStage' }\n        & { cores?: Maybe<Array<Maybe<(\n          { __typename?: 'LaunchRocketFirstStageCore' }\n          & Pick<LaunchRocketFirstStageCore, 'reused' | 'land_success'>\n        )>>> }\n      )> }\n    )> }\n  )> }\n);\n\nexport type RocketListQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type RocketListQuery = (\n  { __typename?: 'Query' }\n  & { launches?: Maybe<Array<Maybe<(\n    { __typename?: 'Launch' }\n    & { rocket?: Maybe<(\n      { __typename?: 'LaunchRocket' }\n      & Pick<LaunchRocket, 'rocket_name'>\n    )> }\n  )>>> }\n);\n\n\nexport const DetailsDocument = gql`\n    query DETAILS {\n  launches {\n    mission_name\n    rocket {\n      rocket_name\n    }\n    launch_year\n    links {\n      video_link\n      wikipedia\n    }\n  }\n}\n    `;\n\n/**\n * __useDetailsQuery__\n *\n * To run a query within a React component, call `useDetailsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDetailsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDetailsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useDetailsQuery(baseOptions?: Apollo.QueryHookOptions<DetailsQuery, DetailsQueryVariables>) {\n        return Apollo.useQuery<DetailsQuery, DetailsQueryVariables>(DetailsDocument, baseOptions);\n      }\nexport function useDetailsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<DetailsQuery, DetailsQueryVariables>) {\n          return Apollo.useLazyQuery<DetailsQuery, DetailsQueryVariables>(DetailsDocument, baseOptions);\n        }\nexport type DetailsQueryHookResult = ReturnType<typeof useDetailsQuery>;\nexport type DetailsLazyQueryHookResult = ReturnType<typeof useDetailsLazyQuery>;\nexport type DetailsQueryResult = Apollo.QueryResult<DetailsQuery, DetailsQueryVariables>;\nexport const MissionAboutDocument = gql`\n    query MissionAbout($id: String!) {\n  launch(id: $id) {\n    mission_name\n    mission_id\n    launch_year\n    launch_success\n  }\n}\n    `;\n\n/**\n * __useMissionAboutQuery__\n *\n * To run a query within a React component, call `useMissionAboutQuery` and pass it any options that fit your needs.\n * When your component renders, `useMissionAboutQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMissionAboutQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useMissionAboutQuery(baseOptions: Apollo.QueryHookOptions<MissionAboutQuery, MissionAboutQueryVariables>) {\n        return Apollo.useQuery<MissionAboutQuery, MissionAboutQueryVariables>(MissionAboutDocument, baseOptions);\n      }\nexport function useMissionAboutLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<MissionAboutQuery, MissionAboutQueryVariables>) {\n          return Apollo.useLazyQuery<MissionAboutQuery, MissionAboutQueryVariables>(MissionAboutDocument, baseOptions);\n        }\nexport type MissionAboutQueryHookResult = ReturnType<typeof useMissionAboutQuery>;\nexport type MissionAboutLazyQueryHookResult = ReturnType<typeof useMissionAboutLazyQuery>;\nexport type MissionAboutQueryResult = Apollo.QueryResult<MissionAboutQuery, MissionAboutQueryVariables>;\nexport const MissionListDocument = gql`\n    query MissionList {\n  launches {\n    mission_name\n  }\n}\n    `;\n\n/**\n * __useMissionListQuery__\n *\n * To run a query within a React component, call `useMissionListQuery` and pass it any options that fit your needs.\n * When your component renders, `useMissionListQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMissionListQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useMissionListQuery(baseOptions?: Apollo.QueryHookOptions<MissionListQuery, MissionListQueryVariables>) {\n        return Apollo.useQuery<MissionListQuery, MissionListQueryVariables>(MissionListDocument, baseOptions);\n      }\nexport function useMissionListLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<MissionListQuery, MissionListQueryVariables>) {\n          return Apollo.useLazyQuery<MissionListQuery, MissionListQueryVariables>(MissionListDocument, baseOptions);\n        }\nexport type MissionListQueryHookResult = ReturnType<typeof useMissionListQuery>;\nexport type MissionListLazyQueryHookResult = ReturnType<typeof useMissionListLazyQuery>;\nexport type MissionListQueryResult = Apollo.QueryResult<MissionListQuery, MissionListQueryVariables>;\nexport const RocketAboutDocument = gql`\n    query RocketAbout($id: String!) {\n  launch(id: $id) {\n    rocket {\n      rocket_name\n      rocket_type\n      first_stage {\n        cores {\n          reused\n          land_success\n        }\n      }\n    }\n  }\n}\n    `;\n\n/**\n * __useRocketAboutQuery__\n *\n * To run a query within a React component, call `useRocketAboutQuery` and pass it any options that fit your needs.\n * When your component renders, `useRocketAboutQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRocketAboutQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useRocketAboutQuery(baseOptions: Apollo.QueryHookOptions<RocketAboutQuery, RocketAboutQueryVariables>) {\n        return Apollo.useQuery<RocketAboutQuery, RocketAboutQueryVariables>(RocketAboutDocument, baseOptions);\n      }\nexport function useRocketAboutLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<RocketAboutQuery, RocketAboutQueryVariables>) {\n          return Apollo.useLazyQuery<RocketAboutQuery, RocketAboutQueryVariables>(RocketAboutDocument, baseOptions);\n        }\nexport type RocketAboutQueryHookResult = ReturnType<typeof useRocketAboutQuery>;\nexport type RocketAboutLazyQueryHookResult = ReturnType<typeof useRocketAboutLazyQuery>;\nexport type RocketAboutQueryResult = Apollo.QueryResult<RocketAboutQuery, RocketAboutQueryVariables>;\nexport const RocketListDocument = gql`\n    query RocketList {\n  launches {\n    rocket {\n      rocket_name\n    }\n  }\n}\n    `;\n\n/**\n * __useRocketListQuery__\n *\n * To run a query within a React component, call `useRocketListQuery` and pass it any options that fit your needs.\n * When your component renders, `useRocketListQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRocketListQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useRocketListQuery(baseOptions?: Apollo.QueryHookOptions<RocketListQuery, RocketListQueryVariables>) {\n        return Apollo.useQuery<RocketListQuery, RocketListQueryVariables>(RocketListDocument, baseOptions);\n      }\nexport function useRocketListLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<RocketListQuery, RocketListQueryVariables>) {\n          return Apollo.useLazyQuery<RocketListQuery, RocketListQueryVariables>(RocketListDocument, baseOptions);\n        }\nexport type RocketListQueryHookResult = ReturnType<typeof useRocketListQuery>;\nexport type RocketListLazyQueryHookResult = ReturnType<typeof useRocketListLazyQuery>;\nexport type RocketListQueryResult = Apollo.QueryResult<RocketListQuery, RocketListQueryVariables>;","import React from 'react';\nimport { MissionListQuery } from '../../generated/graphql';\nimport { useHistory } from 'react-router-dom';\n//CONTEXT API\nimport { settingID } from '../../contextapi';\nimport { useStateValue } from '../../StateContext';\n\ninterface ListProps {\n    data: MissionListQuery\n}\n\nfunction List({ data }: ListProps) {\n    const [ state, dispatch ] = useStateValue();            //jo k value \"useReducer\" ki deraha\n    const history = useHistory();\n\n    return (\n        <div className=\"list_list\">\n            <div className=\"list_list_title\">\n                <p className=\"p1\"> OUR MISSONS </p>\n                <p className=\"p2\"> There vehicle Starship is SpaceX’s fully reusable transportation system designed to carry both crew and cargo to the Earth’s orbit, the Moon, Mars. </p>\n            </div>\n\n            <div className=\"list_list_all\">\n            {\n                data?.launches?.map((x, index) => {\n                    return (\n                        <p key={index} onClick={() => {\n                            dispatch(settingID((index + 1).toString()));\n                            history.push('/missionabout');\n                        }}>\n                            {x?.mission_name}\n                        </p>\n                    )\n                })\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default List;","import React from 'react';\nimport { Card } from '@material-ui/core';\nimport { load } from '../images';\nimport Head from '../Head';\n\nfunction Loading() {\n    return (\n        <Card className=\"loading\" square>\n            <Head title=\"Loading...\"/>\n\n            <img src={load} alt=\"\"/>\n            <ul>\n                <li>l</li> <li>o</li> <li>a</li> <li>d</li> <li>i</li> <li>n</li> <li>g</li> <li>.</li> <li>.</li> <li>.</li>\n            </ul>\n        </Card>\n    )\n}\n\nexport default Loading;","import React from 'react';\nimport { Card } from '@material-ui/core';\nimport { warn } from '../images';\nimport Head from '../Head';\n\nfunction Error() {\n    return (\n        <Card className=\"error\" square>\n            <Head title=\"Error :'(\"/>\n\n            <img src={warn} alt=\"\"/>\n            <ul>\n                <li>e</li> <li>r</li> <li>r</li> <li>o</li> <li>r</li> <li>.</li> <li>.</li>\n            </ul>\n        </Card>\n    )\n}\n\nexport default Error;","import React from 'react';\nimport { useMissionListQuery } from '../../generated/graphql';\nimport List from './List';\nimport Loading from '../Loading';\nimport Error from '../Error';\nimport Head from '../../Head';\n\nfunction MissionList() {\n    const { loading, error, data } = useMissionListQuery();\n\n    if (loading || !data) return <Loading/>;\n    if (error) return <Error/>;\n\n    return (\n        <div className=\"list\">\n            <Head title=\"Missions\"/>\n\n            <List\n                data={data}\n            />\n        </div>\n    )\n}\n\nexport default MissionList;","import React from 'react';\nimport { MissionAboutQuery } from '../../generated/graphql';\nimport { Typography } from '@material-ui/core';\n\ninterface AboutProps {\n    data: MissionAboutQuery;\n    id: string;\n}\n\nfunction About({ data, id }: AboutProps) {\n    return (\n        <div className=\"about_about\">\n            <Typography component=\"p\"> MISSION NO : {id} </Typography>\n\n            <table>\n                <tbody>\n                    <tr>\n                        <th> NAME </th>\n                        <td> {data.launch?.mission_name} </td>\n                    </tr>\n                    <tr>\n                        <th> ID </th>\n                        <td> {(data.launch?.mission_id) && (data.launch?.mission_id[0] ? data.launch?.mission_id[0] : `Not Available`) } </td>\n                    </tr>\n                    <tr>\n                        <th> RESULT </th>\n                        <td> {(data.launch?.launch_success) ? `Success` : `Failed` } </td>\n                    </tr>\n                    <tr>\n                        <th> YEAR   </th>\n                        <td> {data.launch?.launch_year} </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default About;","import React from 'react';\nimport { useMissionAboutQuery } from '../../generated/graphql';\nimport About from './About';\nimport Loading from '../Loading';\nimport Head from '../../Head';\n//CONTEXT API\nimport { useStateValue } from '../../StateContext';\n\nfunction MissionAbout() {\n    const [ { id }, dispatch ] = useStateValue();            //jo k value \"useReducer\" ki deraha\n\n    const { data, loading, error } = useMissionAboutQuery({\n        variables: {\n           id: id\n        }\n    })\n    \n    if (loading || !data) return <Loading/>;\n    if (error) return <p> Error. . . </p>;\n\n    return (\n        <div className=\"about\">\n            <Head title=\"Mission About\"/>\n\n            <About\n                data={data}\n                id={id}\n            />\n        </div>\n    )\n}\n\nexport default MissionAbout;","import React from 'react';\nimport { RocketListQuery } from '../../generated/graphql';\nimport { useHistory } from 'react-router-dom';\n//CONTEXT API\nimport { settingID } from '../../contextapi';\nimport { useStateValue } from '../../StateContext';\n\ninterface ListProps {\n    data: RocketListQuery\n}\n\nfunction List({ data }: ListProps) {\n    const [ state, dispatch ] = useStateValue();            //jo k value \"useReducer\" ki deraha\n    const history = useHistory();\n\n    return (\n        <div className=\"list_list\">\n            <div className=\"list_list_title\" id=\"rockettitle\">\n                <p className=\"p1\"> OUR ROCKET </p>\n                <p className=\"p2\"> These are now used for fireworks, weaponry, ejection seats, launch vehicles for artificial satellites, human spaceflight, and space exploration. </p>\n            </div>\n\n            <div className=\"list_list_all\">\n            {\n                data?.launches?.map((x, index) => {\n                    return (\n                        <p onClick={() => {\n                            dispatch(settingID((index + 1).toString()));\n                            history.push('/rocketabout');\n                        }}>\n                            {x?.rocket?.rocket_name}\n                        </p>\n                    )\n                })\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default List;","import React from 'react';\nimport { useRocketListQuery } from '../../generated/graphql';\nimport List from './List';\nimport Loading from '../Loading';\nimport Error from '../Error';\nimport Head from '../../Head';\n\nfunction RocketList() {\n    const { loading, error, data } = useRocketListQuery();\n\n    if (loading || !data) return <Loading/>;\n    if (error) return <Error/>;\n\n    return (\n        <div className=\"list\">\n            <Head title=\"Rockets\"/>\n\n            <List\n                data={data}\n            />\n        </div>\n    )\n}\n\nexport default RocketList;","import React from 'react';\nimport { RocketAboutQuery } from '../../generated/graphql';\nimport { Typography } from '@material-ui/core';\n\ninterface AboutProps {\n    data: RocketAboutQuery;\n    id: string;\n}\n\nfunction About({ data, id }: AboutProps) {\n    return (\n        <div className=\"about_about\">\n            <Typography component=\"p\"> ROCKET NO : {id} </Typography>\n\n            <table>\n                <tbody>\n                    <tr>\n                        <th> NAME </th>\n                        <td> {data.launch?.rocket?.rocket_name} </td>\n                    </tr>\n                    <tr>\n                        <th> TYPE </th>\n                        <td> {data.launch?.rocket?.rocket_type} </td>\n                    </tr>\n                    <tr>\n                        <th> RESULT   </th>\n                        <td>\n                            {\n                                (data.launch?.rocket?.first_stage?.cores) &&\n                                (\n                                   (data.launch?.rocket?.first_stage?.cores[0]?.land_success === null && `Unknown`)\n                                || (data.launch?.rocket?.first_stage?.cores[0]?.land_success ? `Success` : `Failed`)\n                                )\n                            }\n                        </td>\n                    </tr>\n                    <tr>\n                        <th> REUSED </th>\n                        <td> {(data.launch?.rocket?.first_stage?.cores) && (data.launch?.rocket?.first_stage?.cores[0]?.reused ? `Yes` : `No`)} </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default About;","import React from 'react';\nimport { useRocketAboutQuery } from '../../generated/graphql';\nimport About from './About';\nimport Loading from '../Loading';\nimport Head from '../../Head';\n//CONTEXT API\nimport { useStateValue } from '../../StateContext';\n\nfunction RocketAbout() {\n    const [ { id }, dispatch ] = useStateValue();            //jo k value \"useReducer\" ki deraha\n\n    const { data, loading, error } = useRocketAboutQuery({\n        variables: {\n           id: id\n        }\n    })\n    \n    if (loading || !data) return <Loading/>;\n    if (error) return <p> Error. . . </p>;\n\n    return (\n        <div className=\"about\">\n            <Head title=\"Rocket About\"/>\n            \n            <About\n                data={data}\n                id={id}\n            />\n        </div>\n    )\n}\n\nexport default RocketAbout;","import React from 'react';\nimport { DetailsQuery } from '../../generated/graphql';\n\nconst truncate = (str: string, n: number) => str?.length > n ? `${str.substr(0, n-1)}` : str;\n\ninterface ListProps {\n    data: DetailsQuery\n}\n\nfunction Render({ data }: ListProps) {\n    return (\n        <div className=\"details_details\">\n            <div className=\"details_details_title\">\n                <p className=\"p1\"> OUR DETAILS </p>\n                <p className=\"p2\"> SpaceX designs, manufactures and launches advanced rockets and spacecraft. The company was founded in 2002 to revolutionize space technology, with the ultimate goal of enabling people to live. </p>\n            </div>\n\n            <div className=\"details_details_table\">\n            {\n                data?.launches?.map((x, index) => {\n                    return (\n                        <table key={index}>\n                            <tbody>\n                                <tr>\n                                    <th> MISSION NAME </th>\n                                    <td> {x?.mission_name && truncate(x?.mission_name, 13)} </td>\n                                </tr>\n                                <tr>\n                                    <th> ROCKET NAME </th>\n                                    <td> {x?.rocket?.rocket_name} </td>\n                                </tr>\n                                <tr>\n                                    <th> LAUNCH YEAR </th>\n                                    <td> {x?.launch_year} </td>\n                                </tr>\n                                <tr>\n                                    <th> VIDEO </th>\n                                    <td> {x?.links?.video_link ? <a href={x.links.video_link} target=\"_blank\" rel=\"noreferrer\"> WATCH NOW </a> : `Not Available`} </td>\n                                </tr>\n                                <tr>\n                                    <th> WIKIPEDIA </th>\n                                    <td> {x?.links?.wikipedia ? <a href={x.links.wikipedia} target=\"_blank\" rel=\"noreferrer\"> VISIT NOW </a> : `Not Available`} </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    )\n                })\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default Render;","import React from 'react';\nimport { useDetailsQuery } from '../../generated/graphql';\nimport Render from './Render';\nimport Loading from '../Loading';\nimport Error from '../Error';\nimport Head from '../../Head';\n\nfunction Details() {\n    const { loading, error, data } = useDetailsQuery();\n\n    if (loading || !data) return <Loading/>;\n    if (error) return <Error/>;\n\n    return (\n        <div className=\"details\">\n            <Head title=\"Details\"/>\n\n            <Render\n                data={data}\n            />\n        </div>\n    )\n}\n\nexport default Details;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { \n    HeaderNDrawer,\n    Body,\n    Footer,\n    MissionList,\n    MissionAbout,\n    RocketList,\n    RocketAbout,\n    Details\n} from './components';\n//CONTEXT API\nimport { useStateValue } from './StateContext';\n\nfunction App() {\n    const [ { draweropen }, dispatch ] = useStateValue();\n\n    return (\n        <div style={{ overflowY: draweropen ? \"hidden\" : \"visible\" }}>\n            <Router>\n                <Switch>\n                    <Route path=\"/\" exact>\n                        <HeaderNDrawer>\n                            <div className=\"app\">\n                                <Body\n                                />\n    \n                                <Footer\n                                />\n                            </div>\n                        </HeaderNDrawer>\n                    </Route>\n    \n                    <Route path=\"/missions\" exact>\n                        <HeaderNDrawer>\n                            <MissionList\n                            />\n                        </HeaderNDrawer>\n                    </Route>\n    \n                    <Route path=\"/missionabout\" exact>\n                        <HeaderNDrawer>\n                            <MissionAbout\n                            />\n                        </HeaderNDrawer>\n                    </Route>\n    \n                    <Route path=\"/rockets\" exact>\n                        <HeaderNDrawer>\n                            <RocketList\n                            />\n                        </HeaderNDrawer>\n                    </Route>\n    \n                    <Route path=\"/rocketabout\" exact>\n                        <HeaderNDrawer>\n                            <RocketAbout\n                            />\n                        </HeaderNDrawer>\n                    </Route>\n    \n                    <Route path=\"/details\" exact>\n                        <HeaderNDrawer>\n                            <Details\n                            />\n                        </HeaderNDrawer>\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    )\n}\n\nexport default App;","import { ApolloClient, InMemoryCache } from '@apollo/client';\n\nexport const client = new ApolloClient({\n    uri: 'https://spacexdata.herokuapp.com/graphql',\n    cache: new InMemoryCache()\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './scss/Style.scss';\nimport { client } from './config';\nimport { ApolloProvider } from '@apollo/client';\n//CONTEXT API\nimport { StateProvider } from './StateContext';\n\nReactDOM.render(\n<ApolloProvider client={client}>\n<StateProvider>\n<App/>\n</StateProvider>\n</ApolloProvider>\n, document.getElementById(\"root\"));"],"sourceRoot":""}